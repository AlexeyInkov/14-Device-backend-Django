services:
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/cert.pem
      - ./nginx/key.pem:/etc/key.pem
    depends_on:
      - web-app

  certbot:
    container_name: certbot
    ports:
      - "6000:80"
    env_file:
      - .env
    build:
      context: ./certbot
      dockerfile: Dockerfile
      # задаем переменные среды
      args:
        DOMAIN_EMAIL: ${DOMAIN_EMAIL}
        DOMAIN_URL: ${DOMAIN_URL}
    # и снова мониторуем директорию nginx
    volumes:
      - ./nginx/:/etc/nginx/
    depends_on:
      - nginx

  redis:
    container_name: redis
    image: redis:7.4.1-alpine
    restart: always
#
  web-app:
    container_name: web-app
    build:
      context: .
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./db_device:/db_device

#    command: >
#      sh -c "python manage.py runserver 0.0.0.0:8000"
    command: gunicorn -b 0.0.0.0:8000 config.wsgi:application
    depends_on:
      - postgres
      - redis

#  celery-worker:
#    container_name: celery-worker
#    restart: always
#    build:
#      context: .
#    volumes:
#      - ./cats:/app/src/cats

 #   command: ['celery', '--workdir=./src', '-A', 'proj', 'worker' ]
 #   depends_on:
 #     - postgres
 #     - redis

#
  postgres:
    container_name: postgres
    image: postgres:14.8-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_USER_PASSWORD}
#      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
#      - pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
##    networks:
#      - net
#
#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4:8.10
#    environment:
#      PGADMIN_DEFAULT_EMAIL: "alex0982@mail.ru"
#      PGADMIN_DEFAULT_PASSWORD: "pgadminpassword"
#      PGADMIN_CONFIG_SERVER_MODE: "False"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    restart: unless-stopped
#    networks:
#      - net
#
#
volumes:
  pg-data:
#  pgadmin-data: